apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: mochi-video-gen
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: mochi-backend
    app.kubernetes.io/part-of: mochi-video-gen
spec:
  replicas: 3  # Multiple replicas for high availability
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/instance: mochi-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/instance: mochi-backend
    spec:
      serviceAccountName: mochi-service-account
      initContainers:
      - name: wait-for-ray
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          echo "Waiting for Ray head service..."
          until nc -z ray-head-service 10001; do
            echo "Ray head not ready, waiting..."
            sleep 5
          done
          echo "Ray head is ready!"
      - name: wait-for-redis
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          echo "Waiting for Redis service..."
          until nc -z redis-service 6379; do
            echo "Redis not ready, waiting..."
            sleep 5
          done
          echo "Redis is ready!"
      containers:
      - name: backend
        image: glususer/mochi-backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: RAY_ADDRESS
          value: "ray://ray-head-service:10001"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
        envFrom:
        - configMapRef:
            name: mochi-config
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: models-volume
          mountPath: /models
        - name: cache-volume
          mountPath: /cache
        command:
        - uvicorn
        - main:app
        - --host
        - "0.0.0.0"
        - --port
        - "8000"
        - --workers
        - "1"
        livenessProbe:
          httpGet:
            path: /docs  # FastAPI docs endpoint
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12  # 60 seconds total startup time
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: videos-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: cache-volume
        persistentVolumeClaim:
          claimName: cache-pvc
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        # Spread backend pods across nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname